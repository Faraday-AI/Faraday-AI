services:
  # Core Platform Services
  app:
    build: .
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
      - "${APP_METRICS_PORT:-9091}:${APP_METRICS_PORT:-9091}"
      - "${WEBSOCKET_PORT:-9100}:${WEBSOCKET_PORT:-9100}"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    extra_hosts:
      - "faraday-ai.postgres.database.azure.com:172.190.200.25"
    environment:
      - PORT=${PORT:-8000}
      - API_PORT=${PORT:-8000}
      - METRICS_PORT=${APP_METRICS_PORT:-9091}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT:-9100}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:${REDIS_PORT:-6379}/0
      - MINIO_URL=minio:9002
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_BUCKET=faraday-media
      - ENABLE_METRICS=true
      - LOG_LEVEL=INFO
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MODEL_DIR=/app/models
      - LOG_DIR=/app/logs
      - STATIC_DIR=/app/static
      - EXPORTS_DIR=/app/exports
      - REDIS_HOST=redis
      - MINIO_ENDPOINT=minio:9002
      - PYTHONPATH=/app
    volumes:
      - ./app:/app/app
      - ./models:/app/models
      - ./static:/app/static
      - ./logs:/app/logs
      - ./exports:/app/exports
    depends_on:
      - redis
      - minio
      - prometheus
      - grafana
      - exports
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - faraday-network

  # Export Service
  exports:
    build: .
    command: python -m app.services.export_service
    volumes:
      - ./exports:/app/exports
      - ./logs:/app/logs
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - LOG_DIR=/app/logs
      - PYTHONPATH=/app
    depends_on:
      - redis
    networks:
      - faraday-network

  # Physical Education Services
  pe-movement-analyzer:
    build: .
    command: python -m app.services.physical_education.movement_analyzer
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - MODEL_DIR=/app/models
    depends_on:
      - redis
    networks:
      - faraday-network

  pe-video-processor:
    build: .
    command: python -m app.services.physical_education.video_processor
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - MODEL_DIR=/app/models
    depends_on:
      - redis
    networks:
      - faraday-network

  # Redis Service
  redis:
    image: redis:7.0-alpine
    ports:
      - "${REDIS_PORT:-6379}:${REDIS_PORT:-6379}"
    volumes:
      - redis_data:/data
    networks:
      - faraday-network

  # MinIO Object Storage
  minio:
    image: minio/minio
    ports:
      - "9002:9000"
      - "9003:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - faraday-network

  # Monitoring Services
  prometheus:
    image: prom/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:${PROMETHEUS_PORT:-9090}"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - faraday-network

  grafana:
    image: grafana/grafana
    ports:
      - "${GRAFANA_PORT:-3000}:${GRAFANA_PORT:-3000}"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - faraday-network

volumes:
  redis_data:
  minio_data:
  grafana_data:

networks:
  faraday-network:
    driver: bridge 